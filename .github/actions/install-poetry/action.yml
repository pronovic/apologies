name: Install Poetry
description: Install the Poetry build tool
inputs:
  version:
    description: "Version of Poetry to install (>= 1.2.0)"
    required: true
  plugins:
    description: "Comma-separated list of Poetry plugins to install"
    required: false
    default: ""
runs:
  using: composite
  steps:
    - name: Establish Python version
      shell: bash
      run: |
        # Establish Python version
        which python
        python --version
        python -c "import sys;print('Python %s' % sys.version)"
        echo "PYTHON_VERSION=$(python --version | sed 's/^Python //')" >> "$GITHUB_ENV"
    - name: Configure Poetry runtime locations
      shell: bash
      run: |
        # Configure Poetry runtime locations
        echo "POETRY_VERSION=${{ inputs.version }}" >> "$GITHUB_ENV"
        echo "POETRY_HOME=$GITHUB_WORKSPACE/.poetry/runtime" >> "$GITHUB_ENV"
        echo "POETRY_CACHE=$GITHUB_WORKSPACE/.poetry/cache" >> "$GITHUB_ENV"
    - name: Configure Git to ignore Poetry runtime locations
      shell: bash
      run: |
        # Configure Git to ignore Poetry runtime locations
        mkdir -p "$POETRY_HOME" 
        echo "*" > "$POETRY_HOME/.gitignore"
        mkdir -p "$POETRY_CACHE" 
        echo "*" > "$POETRY_CACHE/.gitignore"
    - name: Install Poetry
      shell: bash
      run: |
        # Install Poetry >=1.2.0 using the official installer
        "$GITHUB_ACTION_PATH/scripts/install-poetry.sh"
    - name: Add Poetry to the system $PATH
      shell: bash
      run: |
        # Add Poetry to the system $PATH
        echo "$GITHUB_WORKSPACE/.poetry/runtime/bin" >> "$GITHUB_PATH"
    - name: Display Poetry location and version
      shell: bash
      run: |
        # Display Poetry location and version
        which poetry
        poetry --version
    - name: Configure Poetry
      shell: bash
      run: |
        # Configure Poetry to use a local cache and virtual environment
        poetry config cache-dir "$POETRY_CACHE" --local
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local
        poetry config --list
    - name: Disable the Python keyring
      shell: bash
      run: |
        # Disable the Python keyring
        # This prevents Poetry from using the Python keyring, which sometimes fails or hangs on Linux
        # See: https://github.com/python-poetry/poetry/issues/2692#issuecomment-1235683370
        echo "PYTHON_KEYRING_BACKEND=keyring.backends.null.Keyring" >> "$GITHUB_ENV"
    - name: Install Poetry plugins
      shell: bash
      env:
        POETRY_PLUGINS: "${{ inputs.plugins }}"
      run: |
        # Install requested Poetry plugins, if any
        "$GITHUB_ACTION_PATH/scripts/install-plugins.sh"

[build-system]
requires = ["poetry-core (>=2.0.0)", "poetry-dynamic-versioning (>=1.5.0,<2.0.0)"]
build-backend = "poetry_dynamic_versioning.backend"

[project]
name = "apologies"
requires-python = ">=3.10,<4"
description = "Python code to play a game similar to Sorry"
authors = [ { name="Kenneth J. Pronovici", email="pronovic@ieee.org" } ]
license = "Apache-2.0"
readme = "PyPI.md"
dynamic = [ "classifiers", "version" ]
dependencies = [
   "attrs (>=24.2.0,<25.0.0)",
   "cattrs (>=24.1.2,<25.0.0)",
   "pendulum (>=3.0.0,<4.0.0)",
]

[project.urls]
homepage = "https://pypi.org/project/apologies/"
repository = "https://github.com/pronovic/apologies"

[project.optional-dependencies]
docs = [
   "importlib-metadata (>=8.5.0,<9.0.0)",
   "sphinx (>=8.1.3,<9.0.0)",
   "sphinx-autoapi (>=3.0.0,<4.0.0)",
]

[tool.poetry]
requires-poetry = ">=2.0.0"
include = [
   { path = 'Changelog', format = 'sdist' },
   { path = 'NOTICE', format = 'sdist' },
   { path = 'LICENSE', format = 'sdist' },
   { path = 'README.md', format = 'sdist' },
   { path = 'docs', format = 'sdist' },
   { path = 'tests', format = 'sdist' },
]
packages = [ { include = "apologies", from = "src" } ]
classifiers=[
   "Operating System :: OS Independent",
   "Environment :: Console",
   "Intended Audience :: Developers",
   "Natural Language :: English",
   "Topic :: Games/Entertainment :: Board Games",
   "Topic :: Software Development :: Libraries",
]
version = "0.0.0"  # published version is managed using Git tags (see below)

[tool.poetry.requires-plugins]
poetry-dynamic-versioning = { version = ">=1.5.0,<2.0.0", extras = ["plugin"] }

# Published version is managed using Git tags
# We get either the tag (like "0.24.1") or a snapshot-type version (like "0.24.1+3.e8319c4")
[tool.poetry-dynamic-versioning]
enable = true
pattern = '^[vV](?P<base>\d+\.\d+\.\d+)'  # this extracts the version from our vX.Y.Z tag format
format-jinja = "{% if distance == 0 and not dirty %}{{ base }}{% else %}{{ base }}+{{ distance }}.{{ commit }}{% endif %}"

[tool.poetry.group.dev.dependencies]
pytest = ">=8.0.2,<9.0.0"
pytest-testdox = ">=3.1.0,<4.0.0"
coverage = ">=7.4.4,<8.0.0"
pylint = ">=3.0.1,<4.0.0"
pre-commit = ">=4.0.1,<5.0.0"
black = ">=24.2.0,<25.0.0"
mypy = ">=1.6.0,<2.0.0"
isort = ">=5.12.0,<6.0.0"
click = ">=8.1.7,<9.0.0"
colorama = ">=0.4.6,<1.0.0"

[tool.black]
line-length = 132
target-version = ['py310', 'py311', 'py312', 'py313' ]
include = '(src\/scripts\/.*$|\.pyi?$)'
exclude = '''
/(
    \.git
  | __pycache__
  | \.tox
  | \.venv
  | \.poetry
  | build
  | dist
  | docs
  | notes
)/
'''

[tool.isort]
profile = "black"
line_length = 132
skip_glob = [ "docs", "notes", ".poetry" ]

[tool.pytest.ini_options]
filterwarnings = [
    'error',  # turn all Python warnings into test failures, so they're hard to miss
    'ignore:datetime.datetime.utcfromtimestamp\(\) is deprecated:DeprecationWarning',
]

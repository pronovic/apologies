#!/bin/bash
# Shortcuts for common developer tasks

SCRIPT_DIR=$(unset CDPATH && cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

run_command() {
   COMMAND="$1"
   shift 1
   source "$SCRIPT_DIR/.run/$COMMAND/command.sh"
   run_$COMMAND $*
}

disable_keyring() {
   # Prevent Poetry v1.2.0 from using the Python keyring, which sometimes fails or hangs on Linux
   # See: https://github.com/python-poetry/poetry/issues/2692#issuecomment-1235683370
   export PYTHON_KEYRING_BACKEND="keyring.backends.null.Keyring"
}

enable_keyring() {
   # We need to unset this for cases where the keyring is required, like publishing
   unset PYTHON_KEYRING_BACKEND
}

# Always disable the keyring by default
disable_keyring

# Execute one of the developer tasks
case $1 in
   install|setup)
      shift 1
      run_command install $*
      ;;
   requirements)
      shift 1
      run_command requirements $*
      ;;
   black)
      shift 1
      run_command black $*
      ;;
   isort)
      shift 1
      run_command isort $*
      ;;
   *lint)
      shift 1
      run_command pylint $*
      ;;
   mypy)
      shift 1
      run_command mypy $*
      ;;
   format)
      shift 1
      run_command format $*
      ;;
   check*)
      shift 1
      run_command check $*
      ;;
   pytest|test*)
      shift 1
      run_command pytest $*
      ;;
   tox)
      shift 1
      run_command tox $*
      ;;
   doc*)
      shift 1
      run_command docs $*
      ;;
   release)
      shift 1
      run_command release $*
      ;;
   publish)
      shift 1
      run_command publish $*
      ;;
   demo)
      shift 1
      run_command demo $*
      ;;
   sim*)
      shift 1
      run_command sim $*
      ;;
   render)
      shift 1
      run_command render $*
      ;;
   *)
      echo ""
      echo "------------------------------------"
      echo "Shortcuts for common developer tasks"
      echo "------------------------------------"
      echo ""
      echo "Usage: run <command>"  
      echo ""
      echo "- run install: Setup the virtualenv via Poetry and install pre-commit hooks"
      echo "- run requirements: Regenerate the docs/requirements.txt file"
      echo "- run format: Run the code formatters"
      echo "- run checks: Run the code checkers"
      echo "- run test: Run the unit tests"
      echo "- run test -c: Run the unit tests with coverage"
      echo "- run test -ch: Run the unit tests with coverage and open the HTML report"
      echo "- run docs: Build the Spinx documentation for apologies.readthedocs.io"
      echo "- run docs -o: Build the Spinx documentation and open in a browser"
      echo "- run tox: Run the Tox test suite used by the GitHub CI action"
      echo "- run release: Release a specific version and tag the code"
      echo "- run publish: Publish the current code to PyPI and push to GitHub"
      echo "- run demo: Run a game with simulated players, displaying output on the terminal"
      echo "- run sim: Run a simulation to see how well different character input sources behave"
      echo ""
      exit 1
esac
